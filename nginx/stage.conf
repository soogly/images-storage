worker_processes auto;

events {
  worker_connections  2048;  # Default: 1024
}

http {
  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name wether.ru.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    server_name wether.ru.com;

    charset utf-8;
    client_max_body_size 100m;

    include /etc/nginx/mime.types;

    location ^~ /.well-known/acme-challenge {
        alias /var/lib/certbot/.well-known/acme-challenge;
        default_type "text/plain";
        try_files $uri =404;
    }

    # ssl_certificate ssl/latest/fullchain.pem;
    # ssl_certificate_key ssl/latest/privkey.pem;
    # better ssl test?
    # https://blog.qualys.com/ssllabs/2013/08/05/configuring-apache-nginx-and-openssl-for-forward-secrecy
    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    #ssl_prefer_server_ciphers on;
    #ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";


    location /users-images {
        default_type image/png;
        proxy_pass http://localstack:4572;
        expires max;
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        proxy_cache_valid 200 301 302 1y;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location / {
      include /etc/nginx/uwsgi_params;
      proxy_pass http://backend:8000;

      client_max_body_size 100m;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    }
  }
}
